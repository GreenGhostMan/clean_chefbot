<launch>
	<arg name="laser_scan" value="true"/>
	<arg name="gmapping" value="true"/>
	<arg name="amcl" value="true"/>
	<arg name="rviz" value="false"/>
	<arg name="forward_kinametics" value="false"/>
	<arg name="hector_slam" value="false"/>

	<node name="twistToMotors" pkg="chefbot_bringup" type="twist_to_motors" />

	

	<!-- lidar -->
  	<group if="$(eval laser_scan == true)">
	 	<include file="$(find rplidar_ros)/launch/rplidar.launch" />
	 	<node name="baselink_laser_tf" type="static_transform_publisher" pkg="tf" args="0 0 0.1 0 0 0 1  /base_link laser  100"/>
	</group>

	<!-- gmapping -->
	<group if="$(eval gmapping == true)">
	 	<include file="$(find chefbot_slam)/launch/gmapping_demo.launch" />
	</group>

	<!-- amcl -->
	<group if="$(eval amcl == true)">
	 	<include file="$(find chefbot_slam)/launch/amcl_demo.launch" />
	</group>

	<!-- rviz -->
	<group if="$(eval rviz == true)">
	 	<node pkg="rviz" type="rviz" name="rviz" args="-d $(find chefbot_slam)/rviz/rviz.rviz"/>
	</group>

	<!-- forward_kinametics -->
	<group if="$(eval forward_kinametics == true)">
	 	<node name="base_controller_node" pkg="chefbot_bringup" type="base_controller">
	    <param name="publish_tf" value="true" /> <!-- false for ekf -->
	    <param name="use_imu" value="false" /> <!-- false for only encoder -->
	    <param name="publish_rate" value="10.0" />
	    <param name="linear_scale_positive" value="1.0" />
	    <param name="linear_scale_negative" value="1.0" />
	    <param name="angular_scale_positive" value="1.0" />
	    <param name="angular_scale_negative" value="1.0" />
	    <param name="angular_scale_accel" value="1.0" />
	    <param name="alpha" value="1.0" />
	</node>
	</group>

	<!--hector_slam-->
	<group if="$(eval hector_slam == true)">
		<!-- HECTOR STUFF -->

  		<arg name="tf_map_scanmatch_transform_frame_name" default="scanmatcher_frame"/>
  		<arg name="base_frame" default="base_link"/>
  		<arg name="odom_frame" default="odom"/><!--not sure-->

  		<!-- Change below!! Used to be true. -->
		<arg name="pub_map_odom_transform" default="false"/>
		<arg name="scan_subscriber_queue_size" default="5"/>
		<arg name="scan_topic" default="scan"/>
		<arg name="map_size" default="2048"/>
		<arg name="pub_odometry" default="true"/>  
		
		<node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">
			<param name="pub_odometry" value="$(arg pub_odometry)"/>

    		<!-- Frame names -->
			<remap from="map" to="mapcurrent" />
			<remap from="/scanmatch_odom" to="/odom"/>
			<param name="map_frame" value="map" />
			<param name="base_frame" value="$(arg base_frame)" />
			<param name="odom_frame" value="$(arg odom_frame)" />
			
    		<!-- Tf use -->
			<param name="use_tf_scan_transformation" value="true"/>
			<param name="use_tf_pose_start_estimate" value="false"/>
			<param name="pub_map_odom_transform" value="$(arg pub_map_odom_transform)"/>
			
    		<!-- Map size / start point -->
			<param name="map_resolution" value="0.050"/>
			<param name="map_size" value="$(arg map_size)"/>
			<param name="map_start_x" value="0.5"/>
			<param name="map_start_y" value="0.5" />
			<param name="map_multi_res_levels" value="2" />
    
    		<!-- Map update parameters -->
			<param name="update_factor_free" value="0.4"/>
			<param name="update_factor_occupied" value="0.9" />    
			<param name="map_update_distance_thresh" value="0.4"/>
			<param name="map_update_angle_thresh" value="0.06" />
			<param name="laser_z_min_value" value = "-1.0" />
			<param name="laser_z_max_value" value = "1.0" />
    
   		 	<!-- Advertising config --> 
    		<param name="advertise_map_service" value="true"/>
    
    		<param name="scan_subscriber_queue_size" value="$(arg scan_subscriber_queue_size)"/>
    		<param name="scan_topic" value="$(arg scan_topic)"/>
    
    		<!-- Debug parameters -->
    		<!--
      		<param name="output_timing" value="false"/>
      		<param name="pub_drawings" value="true"/>
      		<param name="pub_debug_output" value="true"/>
    		-->
    		<param name="tf_map_scanmatch_transform_frame_name" value="$(arg tf_map_scanmatch_transform_frame_name)" />
  		</node>
	</group>
</launch>
